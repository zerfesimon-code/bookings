{
	"info": {
		"_postman_id": "5be35b59-c6ac-4de2-a960-691e41ad1dad",
		"name": "Ride Service API - Complete Collection Copy",
		"description": "Comprehensive API collection for ride service with organized folders, all endpoints, and axios integration",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24624704",
		"_collection_link": "https://lunar-eclipse-303269.postman.co/workspace/2fca546d-3b99-4f54-8acb-523fdaa9f75b/collection/24624704-5be35b59-c6ac-4de2-a960-691e41ad1dad?action=share&source=collection_link&creator=24624704"
	},
	"item": [
        {
            "name": "üß© Socket.IO Events",
            "item": [
                {
                    "name": "Socket Connect (Passenger)",
                    "request": {
                        "method": "GET",
                        "header": [
                            { "key": "X-Postman-Note", "value": "Use a Socket.IO client. This is a documentation stub." }
                        ],
                        "url": { "raw": "wss://{{baseUrl}}?token={{passengerToken}}" }
                    },
                    "response": []
                },
                {
                    "name": "booking_request (Passenger)",
                    "request": {
                        "method": "POST",
                        "header": [ { "key": "X-Postman-Note", "value": "Socket.IO emit: booking_request" } ],
                        "body": { "mode": "raw", "raw": "{\n  \"vehicleType\": \"mini\",\n  \"pickup\": { \"latitude\": 40.7128, \"longitude\": -74.0060 },\n  \"dropoff\": { \"latitude\": 40.7589, \"longitude\": -73.9851 }\n}" },
                        "url": { "raw": "socketio://emit/booking_request" }
                    },
                    "response": []
                },
                {
                    "name": "booking_accept (Driver)",
                    "request": {
                        "method": "POST",
                        "header": [ { "key": "X-Postman-Note", "value": "Socket.IO emit: booking_accept" } ],
                        "body": { "mode": "raw", "raw": "{\n  \"bookingId\": \"{{bookingId}}\"\n}" },
                        "url": { "raw": "socketio://emit/booking_accept" }
                    },
                    "response": []
                },
                {
                    "name": "booking_cancel (Driver/Passenger)",
                    "request": {
                        "method": "POST",
                        "header": [ { "key": "X-Postman-Note", "value": "Socket.IO emit: booking_cancel" } ],
                        "body": { "mode": "raw", "raw": "{\n  \"bookingId\": \"{{bookingId}}\",\n  \"reason\": \"no-show\"\n}" },
                        "url": { "raw": "socketio://emit/booking_cancel" }
                    },
                    "response": []
                },
                {
                    "name": "booking:status_request (Any)",
                    "request": {
                        "method": "POST",
                        "header": [ { "key": "X-Postman-Note", "value": "Socket.IO emit: booking:status_request" } ],
                        "body": { "mode": "raw", "raw": "{\n  \"bookingId\": \"{{bookingId}}\"\n}" },
                        "url": { "raw": "socketio://emit/booking:status_request" }
                    },
                    "response": []
                },
                {
                    "name": "booking:ETA_update (Driver)",
                    "request": {
                        "method": "POST",
                        "header": [ { "key": "X-Postman-Note", "value": "Socket.IO emit: booking:ETA_update" } ],
                        "body": { "mode": "raw", "raw": "{\n  \"bookingId\": \"{{bookingId}}\",\n  \"etaMinutes\": 6,\n  \"message\": \"Coming soon\"\n}" },
                        "url": { "raw": "socketio://emit/booking:ETA_update" }
                    },
                    "response": []
                },
                {
                    "name": "driver:availability (Driver)",
                    "request": {
                        "method": "POST",
                        "header": [ { "key": "X-Postman-Note", "value": "Socket.IO emit: driver:availability" } ],
                        "body": { "mode": "raw", "raw": "{\n  \"available\": true\n}" },
                        "url": { "raw": "socketio://emit/driver:availability" }
                    },
                    "response": []
                },
                {
                    "name": "booking:driver_location_update (Driver)",
                    "request": {
                        "method": "POST",
                        "header": [ { "key": "X-Postman-Note", "value": "Socket.IO emit: booking:driver_location_update" } ],
                        "body": { "mode": "raw", "raw": "{\n  \"latitude\": 40.7128,\n  \"longitude\": -74.0060,\n  \"bearing\": 45,\n  \"bookingId\": \"{{bookingId}}\"\n}" },
                        "url": { "raw": "socketio://emit/booking:driver_location_update" }
                    },
                    "response": []
                },
                {
                    "name": "booking_accept (Server emits payload)",
                    "request": {
                        "method": "GET",
                        "header": [ { "key": "X-Postman-Note", "value": "Documentation of server-emitted payload" } ],
                        "url": { "raw": "socketio://emit/booking_accept" }
                    },
                    "response": [
                        {
                            "name": "Example",
                            "originalRequest": { "method": "GET", "url": "socketio://emit/booking_accept" },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "body": "{\n  \"bookingId\": \"64f2b8d8e1234567890abcd\",\n  \"status\": \"accepted\",\n  \"driver\": {\n    \"id\": \"64f2a93c8b12ef1234567890\",\n    \"name\": \"John Doe\",\n    \"phone\": \"251900000000\",\n    \"carName\": \"Toyota Vitz\",\n    \"vehicleType\": \"Sedan\",\n    \"rating\": 4.8,\n    \"carPlate\": \"AB-12345\"\n  }\n}"
                        }
                    ]
                },
                {
                    "name": "driver:init_bookings (Server emits payload)",
                    "request": {
                        "method": "GET",
                        "header": [ { "key": "X-Postman-Note", "value": "Documentation of server-emitted payload" } ],
                        "url": { "raw": "socketio://emit/driver:init_bookings" }
                    },
                    "response": [
                        {
                            "name": "Example",
                            "originalRequest": { "method": "GET", "url": "socketio://emit/driver:init_bookings" },
                            "status": "OK",
                            "code": 200,
                            "_postman_previewlanguage": "json",
                            "body": "{\n  \"driverId\": \"64f2a93c8b12ef1234567890\",\n  \"bookings\": [\n    {\n      \"bookingId\": \"64f2b8d8e1234567890abcd\",\n      \"status\": \"pending\",\n      \"pickup\": \"Bole Airport\",\n      \"dropoff\": \"CMC\",\n      \"fare\": 350,\n      \"passenger\": {\n        \"id\": \"64f2b8d8e1234567890abcd\",\n        \"name\": \"Jane Doe\",\n        \"phone\": \"251911111111\"\n      }\n    }\n  ]\n}"
                        }
                    ]
                }
            ]
        },
		{
			"name": "üîê Authentication",
			"item": [
				{
					"name": "Passenger Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"  const json = pm.response.json();",
									"  if (json.token) pm.environment.set('passengerToken', json.token);",
									"  if (json.passenger && json.passenger._id) {",
									"    pm.environment.set('passengerId', json.passenger._id);",
									"    pm.environment.set('passengerName', json.passenger.name);",
									"  }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"john.smith@example.com\",\n  \"password\": \"SecurePass123!\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/auth/passenger/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"auth",
								"passenger",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Staff Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"  const json = pm.response.json();",
									"  if (json.token) pm.environment.set('staffToken', json.token);",
									"  if (json.staff && json.staff._id) {",
									"    pm.environment.set('staffId', json.staff._id);",
									"    pm.environment.set('staffName', json.staff.fullName);",
									"  }",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"staff_dispatch\",\n  \"password\": \"StaffPass123!\"\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/auth/staff/login",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"auth",
								"staff",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"  const json = pm.response.json();",
									"  if (json.token) pm.environment.set('adminToken', json.token);",
									"  if (json.admin && json.admin._id) {",
									"    pm.environment.set('adminId', json.admin._id);",
									"    pm.environment.set('adminName', json.admin.fullName);",
									"  }",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"rootadmin\",\n  \"password\": \"admin123\"\n}"
						},
						"url": {
							"raw": "{{baseurl}}/auth/admin/login",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"auth",
								"admin",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Staff Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"  const json = pm.response.json();",
									"  if (json.token) pm.environment.set('staffToken', json.token);",
									"  if (json.staff && json.staff._id) {",
									"    pm.environment.set('staffId', json.staff._id);",
									"    pm.environment.set('staffName', json.staff.fullName);",
									"  }",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"staff_user\",\n  \"password\": \"StaffPass123!\"\n}"
						},
						"url": {
							"raw": "{{baseurl}}/v1/auth/staff/login",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"v1",
								"auth",
								"staff",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Driver login",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"email\": \"test1@example.com\",\r\n\"password\": \"123456\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl}}/auth/driver/login",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"auth",
								"driver",
								"login"
							]
						}
					},
					"response": []
				}
			],
			"description": "Authentication endpoints for all user types"
		},
		{
			"name": "üë§ Passenger APIs",
			"item": [
				{
					"name": "üöó Driver Discovery",
					"item": [
						{
							"name": "Discover Drivers  Estimate Fare (Combined)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Response includes drivers array', function () {",
											"  const json = pm.response.json();",
											"  pm.expect(json).to.have.property('drivers');",
											"  pm.expect(json.drivers).to.be.an('array');",
											"});",
											"pm.test('Response includes fare estimate', function () {",
											"  const json = pm.response.json();",
											"  pm.expect(json).to.have.property('estimate');",
											"  pm.expect(json.estimate).to.have.property('vehicleType');",
											"  pm.expect(json.estimate).to.have.property('distanceKm');",
											"  pm.expect(json.estimate).to.have.property('estimatedFare');",
											"  pm.expect(json.estimate).to.have.property('fareBreakdown');",
											"});",
											"pm.test('Each driver includes required fields', function () {",
											"  const json = pm.response.json();",
											"  if (json.drivers.length > 0) {",
											"    json.drivers.forEach(driver => {",
											"      pm.expect(driver).to.have.property('id');",
											"      pm.expect(driver).to.have.property('driverId');",
											"      pm.expect(driver).to.have.property('vehicleType');",
											"      pm.expect(driver).to.have.property('rating');",
											"      pm.expect(driver).to.have.property('distanceKm');",
											"      pm.expect(driver).to.have.property('driver');",
											"    });",
											"  }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{passengerToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"vehicleType\": \"mini\",\n  \"radiusKm\": 5,\n  \"pickup\": {\n    \"latitude\": 40.7128,\n    \"longitude\": -74.0060,\n    \"address\": \"Times Square, New York, NY\"\n  },\n  \"dropoff\": {\n    \"latitude\": 40.7589,\n    \"longitude\": -73.9851,\n    \"address\": \"Central Park, New York, NY\"\n  }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/drivers/discover-and-estimate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"drivers",
										"discover-and-estimate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Find Available Drivers (Legacy)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{passengerToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/drivers/available?latitude=40.7128&longitude=-74.0060&radiusKm=5&vehicleType=mini",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"drivers",
										"available"
									],
									"query": [
										{
											"key": "latitude",
											"value": "40.7128"
										},
										{
											"key": "longitude",
											"value": "-74.0060"
										},
										{
											"key": "radiusKm",
											"value": "5"
										},
										{
											"key": "vehicleType",
											"value": "mini"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "üí∞ Fare Estimation",
					"item": [
						{
							"name": "Estimate Fare",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6OSwidHlwZSI6InBhc3NlbmdlciIsInJvbGVzIjpbXSwicGVybWlzc2lvbnMiOltdLCJuYW1lIjoiSm9obiBTbWl0aCIsInBob25lIjoiKzEyMzQ1Njc4OTAiLCJlbWFpbCI6ImpvaG4uc21pdGhAZXhhbXBsZS5jb20iLCJ3YWxsZXQiOiIwLjAwIiwicmF0aW5nIjo1LCJyZXdhcmRQb2ludHMiOjAsImlhdCI6MTc1NzY2OTUxMiwiZXhwIjoxNzU4Mjc0MzEyfQ.yVpKRFToIHT4m7u0RrHYUtVI3yURuy6S-eWzAIKF-yU",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{passengerToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"vehicleType\": \"mini\",\n  \"pickup\": {\n    \"latitude\": 40.7128,\n    \"longitude\": -74.0060,\n    \"address\": \"Times Square, New York, NY\"\n  },\n  \"dropoff\": {\n    \"latitude\": 40.7589,\n    \"longitude\": -73.9851,\n    \"address\": \"Central Park, New York, NY\"\n  }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/drivers/estimate-fare",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"drivers",
										"estimate-fare"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "üì± Booking Management",
					"item": [
						{
							"name": "Create Booking",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code === 201) {",
											"  const json = pm.response.json();",
											"  if (json.id) pm.environment.set('bookingId', json.id);",
											"  if (json.passengerId) pm.environment.set('passengerId', json.passengerId);",
											"  if (json.passenger && json.passenger.name) pm.environment.set('passengerName', json.passenger.name);",
											"  if (json.passenger && json.passenger.phone) pm.environment.set('passengerPhone', json.passenger.phone);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{passengerToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"vehicleType\": \"mini\",\n  \"pickup\": {\n    \"latitude\": 40.7128,\n    \"longitude\": -74.0060,\n    \"address\": \"Times Square, New York, NY\"\n  },\n  \"dropoff\": {\n    \"latitude\": 40.7589,\n    \"longitude\": -73.9851,\n    \"address\": \"Central Park, New York, NY\"\n  },\n  \"passengerCount\": 2,\n  \"notes\": \"Please call when you arrive\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/bookings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"bookings"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get My Bookings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response is an array', function () {",
									"  const json = pm.response.json();",
									"  pm.expect(json).to.be.an('array');",
									"});",
									"pm.test('Each booking includes passenger information', function () {",
									"  const json = pm.response.json();",
									"  if (json.length > 0) {",
									"    json.forEach(booking => {",
									"      pm.expect(booking).to.have.property('passenger');",
									"      if (booking.passenger) {",
									"        pm.expect(booking.passenger).to.have.property('id');",
									"        pm.expect(booking.passenger).to.have.property('name');",
									"        pm.expect(booking.passenger).to.have.property('phone');",
									"      }",
									"    });",
									"  }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{passengerToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/bookings?page=1&limit=10&status=pending",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"bookings"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "status",
									"value": "pending"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Booking Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Response includes passenger information', function () {",
									"  const json = pm.response.json();",
									"  pm.expect(json).to.have.property('passenger');",
									"  if (json.passenger) {",
									"    pm.expect(json.passenger).to.have.property('id');",
									"    pm.expect(json.passenger).to.have.property('name');",
									"    pm.expect(json.passenger).to.have.property('phone');",
									"  }",
									"});",
									"pm.test('Response includes booking details', function () {",
									"  const json = pm.response.json();",
									"  pm.expect(json).to.have.property('id');",
									"  pm.expect(json).to.have.property('vehicleType');",
									"  pm.expect(json).to.have.property('pickup');",
									"  pm.expect(json).to.have.property('dropoff');",
									"  pm.expect(json).to.have.property('status');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{passengerToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/bookings/{{bookingId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"bookings",
								"{{bookingId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Booking",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{passengerToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"pickup\": {\n    \"latitude\": 40.7128,\n    \"longitude\": -74.0060,\n    \"address\": \"Updated Times Square, New York, NY\"\n  },\n  \"notes\": \"Updated pickup location\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/bookings/{{bookingId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"bookings",
								"{{bookingId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cancel Booking",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{passengerToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/bookings/{{bookingId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"bookings",
								"{{bookingId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Vehicle Types",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{passengerToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/bookings/vehicle/types",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"bookings",
								"vehicle",
								"types"
							]
						}
					},
					"response": []
				},
				{
					"name": "Debug Authentication",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{passengerToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/bookings/debug/auth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"bookings",
								"debug",
								"auth"
							]
						}
					},
					"response": []
				}
			],
			"description": "All passenger-related endpoints with comprehensive dummy data"
		},
		{
			"name": "üöó Driver APIs",
			"item": [
				{
					"name": "üë§ Driver Management",
					"item": [
						{
							"name": "Set Driver Availability",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{driverToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"available\": true,\n  \"vehicleType\": \"mini\",\n  \"maxPassengers\": 4,\n  \"notes\": \"Available for rides in Manhattan area\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/drivers/{{driverId}}/availability",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"drivers",
										"{{driverId}}",
										"availability"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Driver Location",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6ImRyaXZlciIsInJvbGVzIjpbXSwicGVybWlzc2lvbnMiOltdLCJuYW1lIjoidGVzdDEgUmlkZXIiLCJwaG9uZSI6Iis5MTExMTIyMjIiLCJlbWFpbCI6InRlc3QxQGV4YW1wbGUuY29tIiwid2FsbGV0IjoiMC4wMCIsInJhdGluZyI6NSwicmV3YXJkUG9pbnRzIjowLCJhdmFpbGFiaWxpdHkiOnRydWUsInZlcmlmaWNhdGlvbiI6dHJ1ZSwiaWF0IjoxNzU3NjIzMTgwLCJleHAiOjE3NTgyMjc5ODB9.6CFqodQ9bQUP_mYenTBU4vaByt1LYtAaIF-fssWDWNk",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{driverToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"latitude\": 40.7128,\n  \"longitude\": -74.0060,\n  \"bearing\": 45.0,\n  \"speed\": 25.5,\n  \"accuracy\": 3.0,\n  \"address\": \"Times Square, New York, NY\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/drivers/{{driverId}}/location",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"drivers",
										"{{driverId}}",
										"location"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "üì± Booking Management",
					"item": [
						{
							"name": "Get Nearby Bookings",
							"request": {
								"method": "GET",
								"header": [
									{ "key": "Authorization", "value": "Bearer {{driverToken}}" }
								],
								"url": {
									"raw": "{{baseUrl}}/v1/bookings/nearby?latitude=40.7128&longitude=-74.0060&radiusKm=5&vehicleType=mini&limit=20",
									"host": ["{{baseUrl}}"],
									"path": ["v1","bookings","nearby"],
									"query": [
										{ "key": "latitude", "value": "40.7128" },
										{ "key": "longitude", "value": "-74.0060" },
										{ "key": "radiusKm", "value": "5" },
										{ "key": "vehicleType", "value": "mini" },
										{ "key": "limit", "value": "20" }
									]
								}
							},
							"response": []
						},
						{
							"name": "Accept Booking",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{driverToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"accepted\",\n  \"estimatedArrival\": \"2024-01-15T14:15:00Z\",\n  \"notes\": \"On my way to pickup location\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/bookings/{{bookingId}}/lifecycle",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"bookings",
										"{{bookingId}}",
										"lifecycle"
									]
								}
							},
							"response": []
						},
						{
							"name": "Start Trip",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{driverToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"ongoing\",\n  \"actualPickupTime\": \"2024-01-15T14:20:00Z\",\n  \"notes\": \"Passenger picked up, starting trip\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/bookings/{{bookingId}}/lifecycle",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"bookings",
										"{{bookingId}}",
										"lifecycle"
									]
								}
							},
							"response": []
						},
						{
							"name": "Complete Trip",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{driverToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"completed\",\n  \"actualDropoffTime\": \"2024-01-15T14:45:00Z\",\n  \"fare\": 25.50,\n  \"notes\": \"Trip completed successfully\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/bookings/{{bookingId}}/lifecycle",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"bookings",
										"{{bookingId}}",
										"lifecycle"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Driver Earnings",
					"item": [
						{
							"name": "Get My Earnings (Daily)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{driverToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/analytics/earnings/driver?period=daily",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"analytics",
										"earnings",
										"driver"
									],
									"query": [
										{
											"key": "period",
											"value": "daily"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get My Earnings (Weekly)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{driverToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/analytics/earnings/driver?period=weekly",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"analytics",
										"earnings",
										"driver"
									],
									"query": [
										{
											"key": "period",
											"value": "weekly"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get My Earnings (Monthly)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{driverToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/analytics/earnings/driver?period=monthly",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"analytics",
										"earnings",
										"driver"
									],
									"query": [
										{
											"key": "period",
											"value": "monthly"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Driver Ride History",
					"item": [
						{
							"name": "Get My Ride History",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{driverToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/analytics/rides/history?page=1&limit=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"analytics",
										"rides",
										"history"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "10"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Live (Position Updates)",
					"item": [
						{
							"name": "Driver Push Current Position",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{driverToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"latitude\": 8.98,\n  \"longitude\": 38.79,\n//   \"status\": \"ongoing\",\n  \"locationType\": \"current\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/live/push",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"live",
										"push"
									]
								}
							},
							"response": []
						},
						{
							"name": "Driver Push Position During Trip",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{driverToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"latitude\": 8.985,\n  \"longitude\": 38.795,\n  \"status\": \"ongoing\",\n  \"locationType\": \"current\",\n  \"tripId\": \"{{tripId}}\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/live/push",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"live",
										"push"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"description": "All driver-related endpoints with comprehensive dummy data"
		},
		{
			"name": "üë®‚Äçüíº Admin/Staff APIs",
			"item": [
				{
					"name": "üë• User Management",
					"item": [
						{
							"name": "Passenger Management",
							"item": [
								{
									"name": "Create Passenger (Admin)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"if (pm.response.code === 201) {",
													"  const json = pm.response.json();",
													"  if (json._id) pm.environment.set('passengerId', json._id);",
													"  if (json.name) pm.environment.set('passengerName', json.name);",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{adminToken}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Alice Johnson\",\n  \"phone\": \"1234567893\",\n  \"email\": \"alice.johnson@example.com\",\n  \"password\": \"SecurePass123!\",\n  \"emergencyContacts\": [\n    {\n      \"name\": \"Bob Johnson\",\n      \"phone\": \"1234567894\",\n      \"relationship\": \"Husband\"\n    }\n  ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/v1/passengers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"passengers"
											]
										}
									},
									"response": []
								},
								{
									"name": "List All Passengers",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{adminToken}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/passengers?page=1&limit=20&status=active",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"passengers"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "limit",
													"value": "20"
												},
												{
													"key": "status",
													"value": "active"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Passenger Details",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{adminToken}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/passengers/{{passengerId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"passengers",
												"{{passengerId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Passenger",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{adminToken}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Alice Johnson-Smith\",\n  \"email\": \"alice.smith@example.com\",\n  \"status\": \"active\",\n  \"notes\": \"VIP customer - frequent rider\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/v1/passengers/{{passengerId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"passengers",
												"{{passengerId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Passenger",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{adminToken}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/passengers/{{passengerId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"passengers",
												"{{passengerId}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Driver Management",
							"item": [
								{
									"name": "List All Drivers",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{adminToken}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/drivers?page=1&limit=20&status=active",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"drivers"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "limit",
													"value": "20"
												},
												{
													"key": "status",
													"value": "active"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Driver Details",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{adminToken}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/drivers/{{driverId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"drivers",
												"{{driverId}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "üìã Booking & Trip Management",
					"item": [
						{
							"name": "Booking Management",
							"item": [
								{
									"name": "List All Bookings",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{adminToken}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/bookings?page=1&limit=20&status=pending",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"bookings"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "limit",
													"value": "20"
												},
												{
													"key": "status",
													"value": "pending"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Admin Estimate Fare",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{adminToken}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"vehicleType\": \"sedan\",\n  \"pickup\": {\n    \"latitude\": 40.7128,\n    \"longitude\": -74.0060,\n    \"address\": \"Times Square, New York, NY\"\n  },\n  \"dropoff\": {\n    \"latitude\": 40.7589,\n    \"longitude\": -73.9851,\n    \"address\": \"Central Park, New York, NY\"\n  }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/v1/bookings/estimate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"bookings",
												"estimate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Assign Booking to Driver",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{adminToken}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"driverId\": \"{{driverId}}\",\n  \"dispatcherId\": \"{{adminId}}\",\n  \"passengerId\": \"{{passengerId}}\",\n  \"notes\": \"Assigned by dispatcher - high priority\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/v1/bookings/{{bookingId}}/assign",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"bookings",
												"{{bookingId}}",
												"assign"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Booking Status - Canceled",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{adminToken}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"status\": \"canceled\",\n  \"reason\": \"Passenger no-show\",\n  \"notes\": \"Canceled by admin due to passenger no-show\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/v1/bookings/{{bookingId}}/lifecycle",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"bookings",
												"{{bookingId}}",
												"lifecycle"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Assignment Management",
							"item": [
								{
									"name": "Create Assignment",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"if (pm.response.code === 201) {",
													"  const json = pm.response.json();",
													"  if (json._id) pm.environment.set('assignmentId', json._id);",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{adminToken}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"bookingId\": \"{{bookingId}}\",\n  \"driverId\": \"{{driverId}}\",\n  \"dispatcherId\": \"{{adminId}}\",\n  \"priority\": \"high\",\n  \"notes\": \"VIP customer - expedite assignment\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/v1/assignments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"assignments"
											]
										}
									},
									"response": []
								},
								{
									"name": "List All Assignments",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{adminToken}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/assignments?page=1&limit=20&status=active",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"assignments"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "limit",
													"value": "20"
												},
												{
													"key": "status",
													"value": "active"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Assignment Details",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{adminToken}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/assignments/{{assignmentId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"assignments",
												"{{assignmentId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Assignment",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{adminToken}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"status\": \"completed\",\n  \"notes\": \"Assignment completed successfully\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/v1/assignments/{{assignmentId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"assignments",
												"{{assignmentId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Assignment",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{adminToken}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/assignments/{{assignmentId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"assignments",
												"{{assignmentId}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Trip Management",
							"item": [
								{
									"name": "Create Trip History",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"if (pm.response.code === 201) {",
													"  const json = pm.response.json();",
													"  if (json._id) pm.environment.set('tripId', json._id);",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{adminToken}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"bookingId\": \"{{bookingId}}\",\n  \"driverId\": \"{{driverId}}\",\n  \"passengerId\": \"{{passengerId}}\",\n  \"status\": \"completed\",\n  \"fare\": 25.50,\n  \"distance\": 5.2,\n  \"duration\": 18,\n  \"pickupLocation\": {\n    \"latitude\": 40.7128,\n    \"longitude\": -74.0060,\n    \"address\": \"Times Square, New York, NY\"\n  },\n  \"dropoffLocation\": {\n    \"latitude\": 40.7589,\n    \"longitude\": -73.9851,\n    \"address\": \"Central Park, New York, NY\"\n  },\n  \"startTime\": \"2024-01-15T14:20:00Z\",\n  \"endTime\": \"2024-01-15T14:45:00Z\",\n  \"notes\": \"Smooth trip, no issues\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/v1/trips",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"trips"
											]
										}
									},
									"response": []
								},
								{
									"name": "List All Trips",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{adminToken}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/trips?page=1&limit=20&status=completed",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"trips"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "limit",
													"value": "20"
												},
												{
													"key": "status",
													"value": "completed"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Trip Details",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{adminToken}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/trips/{{tripId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"trips",
												"{{tripId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Trip History",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{adminToken}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"notes\": \"Updated by admin - driver feedback: excellent service\",\n  \"fare\": 26.00\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/v1/trips/{{tripId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"trips",
												"{{tripId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Trip History",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{adminToken}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/trips/{{tripId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"trips",
												"{{tripId}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "üí∞ Pricing Management",
					"item": [
						{
							"name": "Create Pricing - Mini",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code === 201) {",
											"  const json = pm.response.json();",
											"  if (json._id) pm.environment.set('pricingId', json._id);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{adminToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"vehicleType\": \"mini\",\n  \"baseFare\": 2.50,\n  \"perKm\": 1.20,\n  \"perMinute\": 0.25,\n  \"waitingPerMinute\": 0.15,\n  \"surgeMultiplier\": 1.0,\n  \"minimumFare\": 5.00,\n  \"maximumFare\": 100.00,\n  \"active\": true,\n  \"description\": \"Standard pricing for mini vehicles\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/pricing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"pricing"
									]
								}
							},
							"response": []
						},
						{
							"name": "List All Pricing",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{adminToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/pricing?active=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"pricing"
									],
									"query": [
										{
											"key": "active",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Pricing Details",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{adminToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/pricing/{{pricingId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"pricing",
										"{{pricingId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Pricing (Broadcast)",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{adminToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"surgeMultiplier\": 1.5,\n  \"description\": \"Updated pricing with surge multiplier for peak hours\",\n  \"effectiveFrom\": \"2024-01-15T17:00:00Z\",\n  \"effectiveTo\": \"2024-01-15T19:00:00Z\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/pricing/{{pricingId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"pricing",
										"{{pricingId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Pricing",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{adminToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/pricing/{{pricingId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"pricing",
										"{{pricingId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "üìä Analytics & Reports",
					"item": [
						{
							"name": "Commission Management",
							"item": [
								{
									"name": "Get Current Commission Rate",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{adminToken}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/analytics/commission",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"analytics",
												"commission"
											]
										}
									},
									"response": []
								},
								{
									"name": "Set Commission Rate",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{adminToken}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"percentage\": 15.0,\n  \"description\": \"Standard commission rate for all rides\",\n  \"effectiveFrom\": \"2024-01-15T00:00:00Z\",\n  \"vehicleType\": \"all\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/v1/analytics/commission",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"analytics",
												"commission"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Driver Earnings Management",
							"item": [
								{
									"name": "Get Driver Earnings",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{adminToken}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/analytics/earnings/driver?driverId={{driverId}}&period=monthly&month=2024-01",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"analytics",
												"earnings",
												"driver"
											],
											"query": [
												{
													"key": "driverId",
													"value": "{{driverId}}"
												},
												{
													"key": "period",
													"value": "monthly"
												},
												{
													"key": "month",
													"value": "2024-01"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Ride History Management",
							"item": [
								{
									"name": "Get All Ride History",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{adminToken}}"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/analytics/rides/history?page=1&limit=50&status=completed&dateFrom=2024-01-01&dateTo=2024-01-31",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"analytics",
												"rides",
												"history"
											],
											"query": [
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "status",
													"value": "completed"
												},
												{
													"key": "dateFrom",
													"value": "2024-01-01"
												},
												{
													"key": "dateTo",
													"value": "2024-01-31"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Dashboard Statistics",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{adminToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/analytics/dashboard?period=today",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"analytics",
										"dashboard"
									],
									"query": [
										{
											"key": "period",
											"value": "today"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Daily Report",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{adminToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/analytics/reports/daily?date=2024-01-15",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"analytics",
										"reports",
										"daily"
									],
									"query": [
										{
											"key": "date",
											"value": "2024-01-15"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Weekly Report",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{adminToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/analytics/reports/weekly?week=2024-W03",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"analytics",
										"reports",
										"weekly"
									],
									"query": [
										{
											"key": "week",
											"value": "2024-W03"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Monthly Report",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{adminToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/analytics/reports/monthly?month=2024-01",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"analytics",
										"reports",
										"monthly"
									],
									"query": [
										{
											"key": "month",
											"value": "2024-01"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Finance Overview",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{adminToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/analytics/finance/overview?period=monthly&month=2024-01",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"analytics",
										"finance",
										"overview"
									],
									"query": [
										{
											"key": "period",
											"value": "monthly"
										},
										{
											"key": "month",
											"value": "2024-01"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "üìç Live Updates Management",
					"item": [
						{
							"name": "Create Live Update (Admin)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code === 201) {",
											"  const json = pm.response.json();",
											"  if (json._id) pm.environment.set('liveId', json._id);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{adminToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"driverId\": \"{{driverId}}\",\n  \"latitude\": 40.7128,\n  \"longitude\": -74.0060,\n  \"status\": \"en_route\",\n  \"tripId\": \"{{tripId}}\",\n  \"bearing\": 45.0,\n  \"speed\": 30.5,\n  \"accuracy\": 2.0,\n  \"address\": \"Times Square, New York, NY\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/live",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"live"
									]
								}
							},
							"response": []
						},
						{
							"name": "List Live Updates (Admin)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{adminToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/live?page=1&limit=20&status=active",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"live"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "20"
										},
										{
											"key": "status",
											"value": "active"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Live Update Details (Admin)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{adminToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/live/{{liveId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"live",
										"{{liveId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Live Update (Admin)",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{adminToken}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"arrived\",\n  \"notes\": \"Driver has arrived at pickup location\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/live/{{liveId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"live",
										"{{liveId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Live Update (Admin)",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{adminToken}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/live/{{liveId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"live",
										"{{liveId}}"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"description": "All admin and staff management endpoints with comprehensive dummy data"
		},
        {
			"name": "üí≥ Wallet",
			"item": [
				{
					"name": "Topup Wallet (SantimPay DirectPayment)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6OSwidHlwZSI6InBhc3NlbmdlciIsInJvbGVzIjpbXSwicGVybWlzc2lvbnMiOltdLCJuYW1lIjoiSm9obiBTbWl0aCIsInBob25lIjoiKzEyMzQ1Njc4OTAiLCJlbWFpbCI6ImpvaG4uc21pdGhAZXhhbXBsZS5jb20iLCJ3YWxsZXQiOiIwLjAwIiwicmF0aW5nIjo1LCJyZXdhcmRQb2ludHMiOjAsImlhdCI6MTc1NzY2OTUxMiwiZXhwIjoxNzU4Mjc0MzEyfQ.yVpKRFToIHT4m7u0RrHYUtVI3yURuy6S-eWzAIKF-yU",
									"type": "string"
        },
        {
            "name": "üè¶ Payment Options",
            "item": [
                {
                    "name": "List Payment Options (public)",
                    "request": {
                        "method": "GET",
                        "url": { "raw": "{{baseUrl}}/v1/payment-options", "host": ["{{baseUrl}}"], "path": ["v1","payment-options"] }
                    },
                    "response": []
                },
                {
                    "name": "List Payment Options (driver namespace)",
                    "request": {
                        "method": "GET",
                        "header": [ { "key": "Authorization", "value": "Bearer {{driverToken}}" } ],
                        "url": { "raw": "{{baseUrl}}/v1/drivers/payment-options", "host": ["{{baseUrl}}"], "path": ["v1","drivers","payment-options"] }
                    },
                    "response": []
                },
                {
                    "name": "Set Driver Payment Preference",
                    "request": {
                        "method": "POST",
                        "header": [ { "key": "Authorization", "value": "Bearer {{driverToken}}" }, { "key": "Content-Type", "value": "application/json" } ],
                        "body": { "mode": "raw", "raw": "{\n  \"paymentOptionId\": \"{{paymentOptionId}}\"\n}" },
                        "url": { "raw": "{{baseUrl}}/v1/driver/payment-preference", "host": ["{{baseUrl}}"], "path": ["v1","driver","payment-preference"] }
                    },
                    "response": []
                }
            ]
        }
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{passengerToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"207055314\",\n  \"amount\": 1,\n  \"reason\": \"Payment for a coffee\",\n  \"merchantId\": \"c392ec88-2ac9-46c2-8fd4-36aa49b4f469\",\n  \"phoneNumber\": \"251941893993\",\n  \"paymentMethod\": \"Telebirr\",\n\"notifyUrl\": https://bookings.capitalinvestmenttradingplc.com/v1/webhooks/public\n}\n\n    "
						},
						"url": {
							"raw": "{{baseUrl}}/v1/wallet/topup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"wallet",
								"topup"
							]
						}
					},
					"response": []
				},
				{
					"name": "Wallet Transactions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{passengerToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/wallet/transactions/{{passengerId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"wallet",
								"transactions",
								"{{passengerId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Driver Withdraw (B2C Payout)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{driverToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"amount\": 50,\n  \"destination\": \"2519XXXXXXX\",\n  \"method\": \"santimpay\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/wallet/withdraw",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"wallet",
								"withdraw"
							]
						}
					},
					"response": []
				},
				{
					"name": "SantimPay Webhook (Callback)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ID\": \"{{transactionId}}\",\n  \"Status\": \"SUCCESS\",\n  \"TxnId\": \"TX123\",\n  \"RefId\": \"REF123\",\n  \"Commission\": 1.5,\n  \"TotalAmount\": 101.5,\n  \"Msisdn\": \"2519XXXXXXX\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/wallet/webhook",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"wallet",
								"webhook"
							]
						}
					},
					"response": []
				}
				,
				{
					"name": "Driver View Wallet",
					"request": {
						"method": "GET",
						"header": [
							{ "key": "Authorization", "value": "Bearer {{driverToken}}" }
						],
						"url": {
							"raw": "{{baseUrl}}/v1/drivers/{{driverId}}/wallet",
							"host": ["{{baseUrl}}"],
							"path": ["v1","drivers","{{driverId}}","wallet"]
						}
					},
					"response": []
				}
				,
				{
					"name": "Driver Wallet Transactions",
					"request": {
						"method": "GET",
						"header": [
							{ "key": "Authorization", "value": "Bearer {{driverToken}}" }
						],
						"url": {
							"raw": "{{baseUrl}}/v1/drivers/{{driverId}}/wallet/transactions",
							"host": ["{{baseUrl}}"],
							"path": ["v1","drivers","{{driverId}}","wallet","transactions"]
						}
					},
					"response": []
				}
				,
				{
					"name": "Driver Withdraw (Driver Route)",
					"request": {
						"method": "POST",
						"header": [
							{ "key": "Authorization", "value": "Bearer {{driverToken}}" },
							{ "key": "Content-Type", "value": "application/json" }
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"amount\": 50,\n  \"destination\": \"2519XXXXXXX\",\n  \"method\": \"santimpay\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/drivers/{{driverId}}/wallet/withdraw",
							"host": ["{{baseUrl}}"],
							"path": ["v1","drivers","{{driverId}}","wallet","withdraw"]
						}
					},
					"response": []
				}
				,
				{
					"name": "Admin List Driver Wallets",
					"request": {
						"method": "GET",
						"header": [
							{ "key": "Authorization", "value": "Bearer {{adminToken}}" }
						],
						"url": {
							"raw": "{{baseUrl}}/v1/wallet/admin/wallets?page=1&pageSize=20",
							"host": ["{{baseUrl}}"],
							"path": ["v1","wallet","admin","wallets"],
							"query": [
								{ "key": "page", "value": "1" },
								{ "key": "pageSize", "value": "20" }
							]
						}
					},
					"response": []
				}
				,
				{
					"name": "Admin Get Driver Wallet",
					"request": {
						"method": "GET",
						"header": [
							{ "key": "Authorization", "value": "Bearer {{adminToken}}" }
						],
						"url": {
							"raw": "{{baseUrl}}/v1/wallet/admin/wallets/{{driverId}}?limit=100",
							"host": ["{{baseUrl}}"],
							"path": ["v1","wallet","admin","wallets","{{driverId}}"],
							"query": [ { "key": "limit", "value": "100" } ]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseurl",
			"value": ""
		}
	]
}
